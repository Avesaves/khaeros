v2.0.6:
*   Added a new EMO feature, UseCantTellTime.  When set to true, you can't tell the time in the EMO region via [time, clock, and can't see the moon with the spyglass.  useful for setting EMO regions in dungeons.  Must set system-wide setting UseCantTellTime to true to use this feature.
*   UseNonRedMageAI EMO setting has been created.  When set to true, the evil spirits will NOT attack reds (murderers).  However, if a player who is red decides to take a shot at an evil spirit with this option enabled, they will end up killing themselves for 100% of the damage will be reflected back onto the player.
*   SelfInstaller has been updated to make updates to two more distro files (BaseAI.cs and BaseCreature.cs).  It also has been updated to disable itself after all the updates have been made to the distro files.
*   Optimized the Install() method in SelfInstaller.
*   Made the Evil Spirits a bit stronger.


v2.0.5:
*   Fixed a bug when logging on, then off, then back on rather quickly, the m_LoginQueue would process first and would try to add you back into the MobilesTable when you haven't been removed yet.  The m_LogoutQueue will now process first, but also a try/catch wrapper has been placed around MobilesTable.Add to prevent a duplicate key being inserted (it was still possible to crash after changing the order).


v2.0.4:
*   Added EvilSpawners that will now spawn evil spirits during the darkest hour.  You must add the spawners manually using RunUO's [ADD command, then [PROPS to configure their properties.  The spawner will only function if you [TS SET UseEvilSpawners true AND the EMO it is located in must have UseEvilSpawners set to true.
*   Fixed [TS ADDEMO and [TS GETEMO # to show all of the properties of the EMO (some were missing).
*   Fixed a bug in the CalculateLightLevel() method where it was not using timezone scaling even if UseTimeZones = true, therefore Darkest Hour, Light Levels, and auto lighting were not functioning as they should (i.e. changing too late).
*   Fixed a bug where if a player logged off right in the middle of a system tick, it would throw an exception because the collection was modified (removing their MobileObject from the hashtable) while the for loop was still enumerating.  This has been changed to enumerate through NetState.Instances instead.
*   Added login/logout queues and a timer that checks/manages the queues once every 5 seconds.
*   Made a separate timer for polling the lights (default 5 seconds).  The timer speed can me changed by using [TS SET LightsEngineTimerSpeed <value>.  This was necessary as changing the master timer speed would also affect how often the lights outage effect in darkest hour.
*   Fixed a bug in the Load() method in Data.cs that was incorrectly checking the version and would result in a failed load attempt everytime.
*   Fixed a bug when wearing an item with nightsight with both UseNightSightDarksetHourOverride and UseNightSightOverride set to true, whichever reduction was a higher % between the NightSightDarkestHourReduction and NightSightLevelReduction would take precedence during the Darkest Hour, when it should always be the NightSightDarkestHourReduction.
*   Fixed a bug in the IsDarkestHour() method that was not checking to see if UseDarkestHour was true/false before returning it's calculation.
*   Fixed a bug when upgrading to a newer version, the default settings were not being set for any new settings introduced in the newer version.
*   Fixed a bug that [TS ADDEMO and [TS ADDEEMO were still defaulting to Map.Internal instead of mobile.Map.
*   Made UseDarkestHour, UseAutoLighting, UseRandomLightOutage, and LightOutageChancePerTick EMO based instead of system-wide.
*   Massive changes made to the lights engine to reflect the new EMO changes, plus some optimizations that reduced CPU usage.
*   Fixed a bug when changing an EMO's map using [TS SETEMO # MAP <map>, if typing an invalid map name it would result in a crash.
*   Added ability to enable/disable an EMO and EEMO.  The new commands are [TS TOGGLEEMO <#> and [TS TOGGLEEEMO <#>.
*   Changed the SetVariable() method in Config.cs that is used for checking the variables to CheckVariable().
*   Cleaned up a bunch of code in Custom.cs by consolidating and using Config.CheckVariable() method for checking on variables before assigning them.
*   Fixed a bug when using [TS ClearMonths it would cause the server to crash because no months would exist in the array.  I have changed it to remove all but the 1st month.
*   Fixed a bug in the CheckTime() method which was not properly handling the day/month checks and could result in a crash in certain situations.
*   Fixed a bug in the CheckTime() method which would not properly calculate the day/months depending on if you had a huge facet adjustment.
*   Fixed a bug in the CheckAlreadyExistsInArray() method which was not properly checking the array.
*   Changed the MobilesTable from being a Hashtable to a generic Dictionary.


v2.0.3:
*   Fixed a bug where the CalculateLightLevel() method was not checking to see if eo.EffectsMap was null before attempting to use a property.


v2.0.2:
*   Removed an unnecessary command that I left in 2.0.1 by accident to do some debugging.
*   When using [TS ADDEMO and [TS ADDEEMO, instead of defaulting to Map.Internal, it will now set the EMO to be on the map of the person who typed in the command.
*   Fixed a bug where after the data file is loaded, the EMO and EEMO arrays were not being reindexed.
*   Consolidated some ObjectProps classes into the EMO.
*   Added EMO props: UseLightLevelOverride and LightLevelOverrideAdjust.  When UseLightLevelOverride is enabled, the light level for the EMO that has priority would be the LightLevelOverrideAdjust value.
*   Added EMO props: UseMurdererDarkestHourBonus and MurdererDarkestHourLevelBonus.  When UseMurdererDarkestHourBonus is enabled, any players that are murderers, instead of the evil spirits taking away their light level, it will be increased by the MurdererDarkestHourLevelBonus value.
*   Moved the UseLatitude, OuterLatitudePercent, and InnerLatitudePercent from MapObject into EffectsMapObject since this is only used in an EMO, not an EEMO.
*   Added NightSightDarkestHourReduction that is enabled/disabled by UseNightSightDarkestHourOverride.  This is a percentage of how well nightsight will work during Darkest Hour.  If it is set to 100%, then the nightsight effect will be consumed as it is now with UseNightSightDarkestHourOverride set to true.
*   Optimized the CalculateLightLevel() method and made changes for the new features added.
*   When UseNightSightOverride is enabled and NightSightLevelReduction is at 100%, it will now consume the nightsight effect and prevent it from being reapplied.
*   Fixed a bug where on a fresh install or if the data directory is missing, it would fail to set default configuration upon load failure.
*   Added an additional variable in Data.cs so that you can specify the location of the logs directory.
*   Logging can now be disabled/enabled in game via [TS SET LOGGING true/false.  However, you must still set the m_Logging variable in Data.cs if you wish to capture logs of the loading process.
*   Fixed a bug in the SetNightSightOff(MobileObject) method where it would not check to see if mo was null before trying to use the props of the object.
*   Fixed a bug when using [TS SET <variable>, when forgetting to type in a value, it would throw a null reference exception.
*   Added default EMOs for Ilshenar, Malas, and Tokuno.
*   Changed default UpdateInterval from 500ms to 1000ms.


v2.0.1:
*   Fixed a bug where [TS GET would not be able to retrieve the UseNightSightDarkestHourOverride and UseNightSightOverride variables.
*   Removed NightSightLevelReduction from the Variables list, as this is set per EMO, not system wide.
*   Fixed a bug where the default configuration was not calling to "Support.ReIndexArray()" to index the EMO and EEMO arrays.  This resulted in the [TS SETEMO and GETEMO commands reporting incorrect indexes.
*   Fixed a bug when setting the timerspeed via [TS SET TIMERSPEED, it would crash the shard as the low and high values being passed into the method were int and not double.
*   Fixed a bug in the CalculateLightLevel() method that was not checking if a MobileObject was null before attempting to use a property of the object.
*   Added a couple lines of code at the end of the Load() method to reindex the EMO and EEMO arrays after loading has completed.
*   Removed an unnecessary check in the CalculateLightLevel() method.
*   Fixed a bug where the system was configured to use an UpdateTimeStamp variable at the system level instead of the mobile level, resulting in only one mobile receiving light level updates.


v2.0.0:

*   Massive update... too many changes to keep track of.


v1.1.12:

*   Fixed a bug in setting the TIMEFORMAT or CLOCKTIMEFORMAT without specifying a value would result in a null reference exception.
*   Added a [TS VERSION command to display the version of the time system.


v1.1.11:

*   Fixed the $nth$ format variable to now be either based off of day or month.  $nth$ can no longer be used.  It is now $nth-d$ for day and $nth-m$ for month.


v1.1.1:

*   Added a [TS APPEND command for appending to string variables.  If you use the command for non-string variables, it just sets them as it would with [TS SET.
*   Fixed a bug when specifying a variable that does not exist, it would not notify you.


v1.1.01:

*   Changed some code in the Support.cs to allow customizing the names of your months in the m_MonthsList.


v1.1.0:

*   Fixed a bug that when specifying a number without a decimal point for the timerspeed, it would reject the attempt due to it being an int instead of a double.
*   Added a [TS STOP, [TS START, and [TS RESTART commands which will stop, start, and restart the time system.  When stopping the system, it does not perform the calculations for light level and time.  It will display the day level until the system is started again.
*   Added instructions for how to modify Spyclass.cs and Clocks.cs to reflect the moonphase and time.
*   Added time zones with ability to configure them yourself based on how many location.X is considered 1 minute.  This was a huge overhaul to the system to be able to do this.  The default is 16 X is 1 minute and can be changed via [TS SET TIMEZONEXDIVISOR <number>
*   You can disable using time zones by typing [TS SET USETIMEZONES false, in which the system will perform calculations on each tick of the timer only, and not each and every time a player moves.
*   Added [BASETIME command that gamemaster's and above can use to check the system's base time, which is the time the system keeps track of basing it's time zones from.  Using [TIME will display the time in the current time zone.
*   Changed the variable name m_UseItemLighting to m_UseAutoLighting which means you will type UseAutoLighting instead of UseItemLighting using [TS SET.
*   Fixed a bug where changing the moonphaseday would not recalculate the light levels until the next timer tick.
*   Added a [TS SETTIME <hh:mm> command to allow you to set the time a bit easier.
*   Added a [TS QUERY command to query the time system to see if it is running, and if it is, how fast is it calculating time.
*   Added a Support.cs script to assist the system as well as help move some methods out of the Time System.cs so that the file is not too big.
*   Added custom formatting.  This was a huge update.  You will type [TS SET TIMEFORMAT <format> to set the formatting for the [TIME and [BASETIME commands.  You will type [TS SET CLOCKTIMEFORMAT <format> to set the format for when double clicking on clock items.


v1.0.4:

*   Fixed a bug when typing [TS it would not show the command list.


v1.0.3:

*   Fixed a bug when a managed light was deleted from the world and it was selected in PerformRandomLightOutage(), it would not check to see if it was deleted first.
*   Made it so when the managed lights list was repopulated, it would check to see if the item was deleted or not before adding it to the list.
*   Added a command called [TS REPOPLIGHTSLIST to force the list to be repopulated.  Use this command after adding/removing lights that are of the type that will be managed by the system (i.e. LampPost1, LampPost2, LampPost3).
*   Typing [TS by itself will show a list of commands that can be used.


v1.0.2:

*   Fixed a bug in the code that was causing the time calculation to appear to occur one timer tick too slow.
*   Fixed a bug that would cause the lights to come on after the m_LightsOnLevel, and not on it.
*   Added UseRealTime variable in which by default is false.  When true, it will use your computer's date and time.
*   Realized that my loading/saving method was not going to work, I had to make some slight changes in it which involves any pre v1.0.2 files to load "corrupt" and force the system to recreate the file using default values.
*   Fixed a bug where setting the Hour or Minute variable would not recalculate the light levels, instead it would wait for the next timer tick.


v1.0.1:

*   Fixed a minor bug when using the [TS SET command when setting a boolean value, it would only accept lowercase true or false.
*   Removed an unused method which was used to test how the light levels were handled in the distro.

