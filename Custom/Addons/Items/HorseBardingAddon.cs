/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya               //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;
using Server.Mobiles;
using Server.Targeting;

namespace Server.Items
{
	public class AG_HorseBardingAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new AG_HorseBardingAddonDeed();
			}
		}

		[ Constructable ]
		public AG_HorseBardingAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 4984 );
			ac.Movable = true;
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 4985 );
			AddComponent( ac, 0, 0, 0 );
			ac.Movable = true;
		}

		public AG_HorseBardingAddon( Serial serial ) : base( serial )
		{
		}
		
		private class BardingTarget : Target
        {
			private AG_HorseBardingAddon hb;
			
			public BardingTarget( AG_HorseBardingAddon hob )
                : base( 8, false, TargetFlags.None )
            {
                hb = hob;
            }

            protected override void OnTarget( Mobile from, object obj )
            {
                if( obj is Horse && obj is IWarHorse)
				{
					Horse warhorse = obj as Horse;
					
					if( warhorse.BodyValue == 284 )
					{
						from.SendMessage( "That war horse already has a horse barding on it." );
						return;
					}
					
					if( !warhorse.InRange( from, 2 ) || !from.CanSee( warhorse ) )
				   	{
				   		from.SendMessage( "That war horse is too far away from you." );
				   		return;
				   	}
					
					if( warhorse.ControlMaster == from )
					{
						from.SendMessage( "You have successfully donned your war horse with the horse barding." );
						
						warhorse.BluntResistSeed += 10;
						warhorse.PiercingResistSeed += 10;
						warhorse.SlashingResistSeed += 10;
						warhorse.VirtualArmor += 10;
						warhorse.BodyValue = 284;
						warhorse.Hue = hb.Hue;
						warhorse.ItemID = 16018;
						
						hb.Delete();
					}
					
					else
					{
						from.SendMessage( "That war horse is not yours." );
					}
				}
                
                else
				{
					from.SendMessage( "That is not a war horse." );
				}
            }
		}
            
		public override void OnComponentUsed( AddonComponent c, Mobile from )
		{
			if( c.IsChildOf( from.Backpack ) )
			{
				from.SendMessage( 60, "Choose a war horse to don with this horse barding." );
				from.Target = new BardingTarget( this );
			}
			
			else
			{
				from.SendMessage( "This must be in your backpack for you to use it." );
			}
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class AG_HorseBardingAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new AG_HorseBardingAddon();
			}
		}

		[Constructable]
		public AG_HorseBardingAddonDeed()
		{
			Name = "Horse Barding";
		}

		public AG_HorseBardingAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}
