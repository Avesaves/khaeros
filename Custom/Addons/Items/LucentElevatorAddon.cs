/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya               //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class AG_LucentElevatorAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new AG_LucentElevatorAddonDeed();
			}
		}

		[ Constructable ]
		public AG_LucentElevatorAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 5 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 5 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 5 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 5 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 10 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 10 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 10 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 10 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 15 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 15 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 15 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 15 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 20 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 20 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 20 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 20 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 25 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 25 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 25 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 25 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 30 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 30 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 30 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 30 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 35 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 35 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 35 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 35 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 40 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 40 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 40 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 40 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 45 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 45 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 45 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 45 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 50 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 50 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 50 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 50 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 0, 55 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 0, 1, 55 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 0, 55 );
			ac = new AddonComponent( 1928 );
			ac.Hue = 1899;
			AddComponent( ac, 1, 1, 55 );
			ac = new AddonComponent( 6014 );
			AddComponent( ac, 0, 0, 60 );
			ac = new AddonComponent( 6016 );
			AddComponent( ac, 0, 1, 60 );
			ac = new AddonComponent( 6014 );
			AddComponent( ac, 1, 0, 60 );
			ac = new AddonComponent( 6015 );
			AddComponent( ac, 1, 1, 60 );

		}

		public AG_LucentElevatorAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class AG_LucentElevatorAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new AG_LucentElevatorAddon();
			}
		}

		[Constructable]
		public AG_LucentElevatorAddonDeed()
		{
			Name = "AG_LucentElevator";
		}

		public AG_LucentElevatorAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}
